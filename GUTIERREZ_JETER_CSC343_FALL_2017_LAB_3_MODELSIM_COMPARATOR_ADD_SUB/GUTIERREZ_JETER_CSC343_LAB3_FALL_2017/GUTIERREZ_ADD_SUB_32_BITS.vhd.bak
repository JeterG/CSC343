library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_signed.all;

entity GUTIERREZ_ADD_SUB_32_BITS is
	port ( SUBTRACT: in std_logic;
			 X, Y: in std_logic_vector(31 downto 0);
			 S: out std_logic_vector (31 downto 0);
			 Cout, Overflow: out std_logic);
end entity;
architecture STRUCTURE_32 of GUTIERREZ_ADD_SUB_16_BITS is 
component GUTIERREZ_ADDER_16_BITS is 
	port ( cin: in std_logic;
			 X, Y: in std_logic_vector(31 downto 0);
			 sum_prime: out std_logic_vector (31 downto 0);
			 Cout, Overflow: out std_logic);
end component;
	signal FIRST: std_logic_vector(31 downto 0);
	begin
	SECOND:
		for i in 0 to (31) generate
			INVERSE: FIRST(i) <= Y(i) xor SUBTRACT;
		end generate;
	THIRD : GUTIERREZ_ADDER_16_BITS port map(SUBTRACT, X, FIRST, S, Cout, Overflow);
end STRUCTURE_32;