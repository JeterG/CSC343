/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("INPUT_X")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT_X[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_X[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_X";
}

SIGNAL("INPUT_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT_Y[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("INPUT_Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT_Y";
}

SIGNAL("PRODUCT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PRODUCT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

SIGNAL("PRODUCT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PRODUCT";
}

TRANSITION_LIST("INPUT_X[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 200.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 200.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("INPUT_X[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 200.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 200.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("INPUT_Y[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("PRODUCT[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.888;
			LEVEL 0 FOR 79.551;
			LEVEL 1 FOR 41.25;
			LEVEL 0 FOR 438.75;
			LEVEL 1 FOR 40.236;
			LEVEL 0 FOR 80.819;
			LEVEL 1 FOR 39.181;
			LEVEL 0 FOR 80.819;
			LEVEL 1 FOR 39.897;
			LEVEL 0 FOR 148.609;
		}
	}
}

TRANSITION_LIST("PRODUCT[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.014;
			LEVEL 1 FOR 40.333;
			LEVEL 0 FOR 279.7;
			LEVEL 1 FOR 39.547;
			LEVEL 0 FOR 40.453;
			LEVEL 1 FOR 39.515;
			LEVEL 0 FOR 400.955;
			LEVEL 1 FOR 119.161;
			LEVEL 0 FOR 29.322;
		}
	}
}

TRANSITION_LIST("PRODUCT[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.273;
			LEVEL 1 FOR 40.924;
			LEVEL 0 FOR 39.579;
			LEVEL 1 FOR 79.42;
			LEVEL 0 FOR 40.519;
			LEVEL 1 FOR 160.249;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 40.006;
			LEVEL 0 FOR 78.972;
			LEVEL 1 FOR 41.052;
			LEVEL 0 FOR 79.296;
			LEVEL 1 FOR 40.704;
			LEVEL 0 FOR 120.319;
			LEVEL 1 FOR 79.298;
			LEVEL 0 FOR 108.395;
		}
	}
}

TRANSITION_LIST("PRODUCT[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.245;
			LEVEL 1 FOR 80.718;
			LEVEL 0 FOR 159.695;
			LEVEL 1 FOR 39.983;
			LEVEL 0 FOR 79.307;
			LEVEL 1 FOR 40.875;
			LEVEL 0 FOR 79.914;
			LEVEL 1 FOR 39.814;
			LEVEL 0 FOR 40.379;
			LEVEL 1 FOR 40.242;
			LEVEL 0 FOR 79.758;
			LEVEL 1 FOR 40.009;
			LEVEL 0 FOR 80.34;
			LEVEL 1 FOR 39.684;
			LEVEL 0 FOR 39.453;
			LEVEL 1 FOR 108.584;
		}
	}
}

TRANSITION_LIST("PRODUCT[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.15;
			LEVEL 0 FOR 41.145;
			LEVEL 1 FOR 39.68;
			LEVEL 0 FOR 39.742;
			LEVEL 1 FOR 39.846;
			LEVEL 0 FOR 120.19;
			LEVEL 1 FOR 240.431;
			LEVEL 0 FOR 80.111;
			LEVEL 1 FOR 38.866;
			LEVEL 0 FOR 40.925;
			LEVEL 1 FOR 119.556;
			LEVEL 0 FOR 40.122;
			LEVEL 1 FOR 79.397;
			LEVEL 0 FOR 68.839;
		}
	}
}

TRANSITION_LIST("PRODUCT[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.958;
			LEVEL 1 FOR 79.592;
			LEVEL 0 FOR 160.821;
			LEVEL 1 FOR 39.968;
			LEVEL 0 FOR 159.734;
			LEVEL 1 FOR 120.459;
			LEVEL 0 FOR 40.46;
			LEVEL 1 FOR 79.54;
			LEVEL 0 FOR 39.839;
			LEVEL 1 FOR 40.161;
			LEVEL 0 FOR 39.839;
			LEVEL 1 FOR 39.979;
			LEVEL 0 FOR 148.65;
		}
	}
}

TRANSITION_LIST("PRODUCT[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.694;
			LEVEL 1 FOR 159.936;
			LEVEL 0 FOR 80.804;
			LEVEL 1 FOR 39.666;
			LEVEL 0 FOR 80.395;
			LEVEL 1 FOR 39.113;
			LEVEL 0 FOR 160.201;
			LEVEL 1 FOR 40.201;
			LEVEL 0 FOR 39.799;
			LEVEL 1 FOR 80.822;
			LEVEL 0 FOR 39.178;
			LEVEL 1 FOR 80.613;
			LEVEL 0 FOR 78.665;
			LEVEL 1 FOR 40.297;
			LEVEL 0 FOR 29.616;
		}
	}
}

TRANSITION_LIST("PRODUCT[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.591;
			LEVEL 0 FOR 80.215;
			LEVEL 1 FOR 79.796;
			LEVEL 0 FOR 40.531;
			LEVEL 1 FOR 40.283;
			LEVEL 0 FOR 79.308;
			LEVEL 1 FOR 40.668;
			LEVEL 0 FOR 160.333;
			LEVEL 1 FOR 118.844;
			LEVEL 0 FOR 40.807;
			LEVEL 1 FOR 40.249;
			LEVEL 0 FOR 39.541;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.433;
			LEVEL 1 FOR 38.862;
			LEVEL 0 FOR 80.1;
			LEVEL 1 FOR 29.522;
		}
	}
}

TRANSITION_LIST("PRODUCT[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.992;
			LEVEL 1 FOR 40.902;
			LEVEL 0 FOR 79.899;
			LEVEL 1 FOR 79.509;
			LEVEL 0 FOR 120.146;
			LEVEL 1 FOR 39.678;
			LEVEL 0 FOR 120.132;
			LEVEL 1 FOR 40.022;
			LEVEL 0 FOR 119.827;
			LEVEL 1 FOR 80.166;
			LEVEL 0 FOR 79.73;
			LEVEL 1 FOR 40.36;
			LEVEL 0 FOR 40.071;
			LEVEL 1 FOR 40.166;
			LEVEL 0 FOR 39.355;
			LEVEL 1 FOR 29.045;
		}
	}
}

TRANSITION_LIST("PRODUCT[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.66;
			LEVEL 1 FOR 119.857;
			LEVEL 0 FOR 159.806;
			LEVEL 1 FOR 200.242;
			LEVEL 0 FOR 121.129;
			LEVEL 1 FOR 199.894;
			LEVEL 0 FOR 119.105;
			LEVEL 1 FOR 40.336;
			LEVEL 0 FOR 28.971;
		}
	}
}

TRANSITION_LIST("PRODUCT[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.247;
			LEVEL 1 FOR 40.163;
			LEVEL 0 FOR 120.25;
			LEVEL 1 FOR 80.224;
			LEVEL 0 FOR 39.034;
			LEVEL 1 FOR 80.204;
			LEVEL 0 FOR 80.017;
			LEVEL 1 FOR 40.49;
			LEVEL 0 FOR 40.652;
			LEVEL 1 FOR 39.688;
			LEVEL 0 FOR 120.103;
			LEVEL 1 FOR 39.485;
			LEVEL 0 FOR 40.375;
			LEVEL 1 FOR 159.952;
			LEVEL 0 FOR 68.116;
		}
	}
}

TRANSITION_LIST("PRODUCT[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.923;
			LEVEL 0 FOR 40.355;
			LEVEL 1 FOR 39.316;
			LEVEL 0 FOR 440.831;
			LEVEL 1 FOR 119.613;
			LEVEL 0 FOR 120.24;
			LEVEL 1 FOR 119.391;
			LEVEL 0 FOR 109.331;
		}
	}
}

TRANSITION_LIST("PRODUCT[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.716;
			LEVEL 1 FOR 40.645;
			LEVEL 0 FOR 39.026;
			LEVEL 1 FOR 120.709;
			LEVEL 0 FOR 160.36;
			LEVEL 1 FOR 119.176;
			LEVEL 0 FOR 120.559;
			LEVEL 1 FOR 39.696;
			LEVEL 0 FOR 39.792;
			LEVEL 1 FOR 160.427;
			LEVEL 0 FOR 39.753;
			LEVEL 1 FOR 39.155;
			LEVEL 0 FOR 40.665;
			LEVEL 1 FOR 29.321;
		}
	}
}

TRANSITION_LIST("PRODUCT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.215;
			LEVEL 1 FOR 39.901;
			LEVEL 0 FOR 80.584;
			LEVEL 1 FOR 39.151;
			LEVEL 0 FOR 40.784;
			LEVEL 1 FOR 39.955;
			LEVEL 0 FOR 119.296;
			LEVEL 1 FOR 160.639;
			LEVEL 0 FOR 80.43;
			LEVEL 1 FOR 39.161;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 160.667;
			LEVEL 0 FOR 39.79;
			LEVEL 1 FOR 79.216;
			LEVEL 0 FOR 29.149;
		}
	}
}

TRANSITION_LIST("PRODUCT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.017;
			LEVEL 1 FOR 40.169;
			LEVEL 0 FOR 79.794;
			LEVEL 1 FOR 119.686;
			LEVEL 0 FOR 160.314;
			LEVEL 1 FOR 40.415;
			LEVEL 0 FOR 80.042;
			LEVEL 1 FOR 79.958;
			LEVEL 0 FOR 40.042;
			LEVEL 1 FOR 119.958;
			LEVEL 0 FOR 39.015;
			LEVEL 1 FOR 41.25;
			LEVEL 0 FOR 148.34;
		}
	}
}

TRANSITION_LIST("PRODUCT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.708;
			LEVEL 1 FOR 40.648;
			LEVEL 0 FOR 159.772;
			LEVEL 1 FOR 40.228;
			LEVEL 0 FOR 79.315;
			LEVEL 1 FOR 40.685;
			LEVEL 0 FOR 319.315;
			LEVEL 1 FOR 40.685;
			LEVEL 0 FOR 268.644;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_X[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT_Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "PRODUCT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 18;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
